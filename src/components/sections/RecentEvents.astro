---
import { eventsQuery } from "../../lib/api";
import { Card, CardContent, CardHeader, CardTitle } from "../ui/card";
import { Button } from "../ui/button";

// Fetch recent events
let events = [];
try {
    const data = await eventsQuery();
    events = data?.events?.nodes || [];
} catch (error) {
    console.error('Error fetching recent events:', error);
}
---



        {events.length > 0 ? (
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {events.map((event) => (
                    <Card className="overflow-hidden hover:shadow-lg transition-shadow duration-300">
                        {event.featuredImage?.node?.sourceUrl && (
                            <div class="aspect-video overflow-hidden">
                                <img 
                                    src={event.featuredImage.node.sourceUrl} 
                                    alt={event.featuredImage.node.altText || event.title}
                                    class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                                />
                            </div>
                        )}
                        <CardHeader>
                            <div class="flex items-center gap-2 mb-2">
                                <span class="inline-block px-2 py-1 text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 rounded-full">
                                    Event
                                </span>
                            </div>
                            <CardTitle className="text-xl">
                                <a href={`/event/${event.slug}`} class="hover:text-green-600 dark:hover:text-green-400 transition-colors">
                                    {event.title}
                                </a>
                            </CardTitle>
                        </CardHeader>
                        <CardContent>
                            <p class="text-slate-600 dark:text-white/80 text-sm line-clamp-3 mb-4">
                                {event.content?.replace(/<[^>]*>/g, '').substring(0, 150) + '...' || 'No description available'}
                            </p>
                            <div class="flex items-center justify-between text-sm text-slate-500 dark:text-white/60">
                                <time datetime={event.date}>
                                    {new Date(event.date).toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: 'long',
                                        day: 'numeric'
                                    })}
                                </time>
                                <a href={`/event/${event.slug}`} class="text-green-600 dark:text-green-400 hover:underline">
                                    Learn more â†’
                                </a>
                            </div>
                        </CardContent>
                    </Card>
                ))}
            </div>
        ) : (
            <div class="text-center py-12">
                <div class="text-slate-400 dark:text-white/40 text-lg mb-4">No events found</div>
                <p class="text-slate-600 dark:text-white/80">Check back soon for upcoming events!</p>
            </div>
        )}

        <div class="text-center mt-12">
            <a href="/events" class="inline-flex items-center px-6 py-3 bg-slate-900 text-white dark:bg-white dark:text-slate-900 rounded-lg hover:bg-slate-800 dark:hover:bg-gray-100 transition-colors">
                View All Events
                <svg class="w-4 h-4 ml-2" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"/>
                    <path d="m12 5 7 7-7 7"/>
                </svg>
            </a>
        </div>
    
