name: Deploy to Cloud Run and Netlify

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: astrowp-deployment
  SERVICE_NAME: astrowp-backend
  REGION: us-central1
  DB_INSTANCE: astrowp-wordpress-db

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - Check if GCP_SA_KEY exists
        run: |
          if [ -n "${{ secrets.GCP_SA_KEY }}" ]; then
            echo "GCP_SA_KEY is set"
          else
            echo "GCP_SA_KEY is NOT set"
          fi

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for gcloud
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/astrowp-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/astrowp-repo/${{ env.SERVICE_NAME }}:${{ github.sha }}

                   - name: Deploy to Cloud Run
               run: |
                 gcloud run deploy ${{ env.SERVICE_NAME }} \
                   --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/astrowp-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} \
                   --platform managed \
                   --region ${{ env.REGION }} \
                   --allow-unauthenticated \
                   --service-account astrowp-deploy@astrowp-deployment.iam.gserviceaccount.com \
                   --set-env-vars="DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_HOST=${{ secrets.DB_HOST }},WP_HOME=${{ secrets.WP_HOME }},WP_SITEURL=${{ secrets.WP_SITEURL }}"

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site
        run: npm run build
        env:
          WORDPRESS_API_URL: ${{ secrets.WORDPRESS_API_URL }}

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
